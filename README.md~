# task2

## task2-1.c
double mySqrt(double x, double eps) returns a square root of a positive number x with precision eps.
The computation does not proceed if x is less than zero.

## task2-2.c
Calculation of the values (polynomial, derivative, integral) is done simultaneously using recurrent formulas.

## task2-3.c
long iterFib(int num) gets the index num and iteratively computes num-th Fibonacci number.
long recFib(int num) gets the index num and recursively computes num-th Fibonacci number.

## task2-4.c
MAXLINE is the maximum size of the input string.
double str2double(char str[]) converts string str[] of char into double.

## task2-5.c
Using list structure to store entered data.
MAXLEN is the maximum length of a word.
void add_front(list *lp, elemtype x) - adds the word in the beginning of a list.
void delete_like_last(list *lp, elemtype x) - deletes all elements equal to the last word in the list.
void print(list l) - prints the list.
void destroy(list *lp) - frees memory allocated to the list.

## task2-6.c
Using tree structure to store entered data.
MAXLEN is the maximum length of a number.
int check(tree t, elemtype x) - checks if the number is in a tree.
int add(tree *tp, elemtype x) - adds the number in the tree.
int delete(tree *tp, elemtype x) - deletes the number from the tree.
void print(tree t) - prints the tree.
void destroy(tree *tp) - frees memory allocated to the tree.

## task2-7.c
Added subtraction, division and exponentiation functionality to existing code.
